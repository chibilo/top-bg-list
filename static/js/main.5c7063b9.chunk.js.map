{"version":3,"sources":["Consts.js","components/GameCard.js","components/GameList.js","components/CustomDropDown.js","App.js","index.js"],"names":["Hosts","Tesera","title","linkIdField","makeLink","linkId","ratingField","sortField","BGG","info","Card","Img","src","photo","alt","ImgOverlay","className","numRating","Badge","variant","gameRating","Body","style","zIndex","Title","Text","desc","links","map","link","idx","Link","as","href","target","id","host","limit","useState","data","setData","isAlertShown","showAlert","makeLinks","Object","values","useEffect","sort","axios","get","then","res","teseraId","descriptionShort","photoUrl","catch","e","console","error","Alert","show","GameCard","value","items","onChange","val","onClick","text","App","source","setSource","setLimit","CustomDropDown","entries","GameList","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5c7063b9.chunk.js","sourcesContent":["export const Hosts = {\r\n  Tesera: {\r\n    title: \"Tesera\",\r\n    linkIdField: \"alias\",\r\n    makeLink: (linkId) => `https://tesera.ru/game/${linkId}`,\r\n    ratingField: \"ratingUser\",\r\n    sortField: \"-ratingn10\"\r\n  },\r\n  BGG: {\r\n    title: \"BoardGameGeek\",\r\n    linkIdField: \"bggId\",\r\n    makeLink: (linkId) => `https://www.boardgamegeek.com/boardgame/${linkId}`,\r\n    ratingField: \"bggGeekRating\",\r\n    sortField: \"-ratinggeekbgg\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Card, Badge } from \"react-bootstrap\";\r\n\r\nexport default ({ info }) => (\r\n  <Card key={info.id}>\r\n    <Card.Img src={info.photo} alt=\"game image\"></Card.Img>\r\n    <Card.ImgOverlay>\r\n      <div className=\"rating\">{info.numRating}</div>\r\n      <Badge className=\"pull-right\" variant=\"success\" title=\"rating\">\r\n        {info.gameRating}\r\n      </Badge>\r\n    </Card.ImgOverlay>\r\n    <Card.Body style={{ zIndex: 1000 }}>\r\n      <Card.Title>{info.title}</Card.Title>\r\n      <Card.Text>{info.desc}</Card.Text>\r\n      {info.links.map((link, idx) => (\r\n        <Card.Link key={idx} as=\"a\" href={link.link} target=\"_blank\">\r\n          {link.title}\r\n        </Card.Link>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport GameCard from \"./GameCard\";\r\nimport { Hosts } from \"./../Consts\";\r\n\r\nexport default ({ host, limit }) => {\r\n  const [data, setData] = useState([]);\r\n  const [isAlertShown, showAlert] = useState(false);\r\n\r\n  const makeLinks = (info) => {\r\n    return Object.values(Hosts).map(({ title, linkIdField, makeLink }) => {\r\n      return {\r\n        title: title,\r\n        link: makeLink(info[linkIdField])\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    showAlert(true);\r\n    //setData([]);\r\n    const sort = Hosts[host]?.sortField || \"-ratingn10\";\r\n    axios\r\n      .get(`https://api.tesera.ru/games?offset=0&limit=${limit}&sort=${sort}`)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        showAlert(false);\r\n        const ratingField = Hosts[host]?.ratingField || \"ratingUser\";\r\n        setData(\r\n          res.data.map((info, idx) => {\r\n            return {\r\n              id: info.teseraId,\r\n              title: info.title,\r\n              desc: info.descriptionShort,\r\n              photo: info.photoUrl,\r\n              numRating: idx + 1,\r\n              gameRating: info[ratingField],\r\n              links: makeLinks(info)\r\n            };\r\n          })\r\n        );\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n  }, [host, limit]);\r\n\r\n  return (\r\n    <div className=\"game-list\">\r\n      <Alert className=\"alert\" show={isAlertShown} variant=\"info\">\r\n        Loading...\r\n      </Alert>\r\n      {data.map((info) => (\r\n        <GameCard info={info} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ value, items, onChange }) => {\r\n  return (\r\n    <div className=\"custom-dropdown\">\r\n      {value}\r\n      <ul className=\"custom-dropdown-menu\">\r\n        {items.map((val, idx) => (\r\n          <li\r\n            key={idx}\r\n            onClick={(e) => {\r\n              onChange(val.value ?? val);\r\n            }}\r\n          >\r\n            {val.text ?? val}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { Hosts } from \"./Consts\";\nimport GameList from \"./components/GameList\";\nimport CustomDropDown from \"./components/CustomDropDown\";\n\nexport default function App() {\n  const [source, setSource] = useState(\"BGG\");\n  const [limit, setLimit] = useState(10);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Топ{\" \"}\n        <CustomDropDown\n          value={limit}\n          items={[10, 25, 50, 100]}\n          onChange={(val) => setLimit(val)}\n        />{\" \"}\n        Настольных Игр по версии{\" \"}\n        <CustomDropDown\n          value={Hosts[source].title}\n          items={Object.entries(Hosts).map((host) => ({\n            value: host[0],\n            text: host[1].title\n          }))}\n          onChange={(source) => setSource(source)}\n        />\n      </h1>\n      <GameList host={source} limit={limit} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}